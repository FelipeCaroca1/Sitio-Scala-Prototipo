---
description: Reglas específicas para hooks personalizados en TechXcelerators6.
globs:
  - "src/hooks/**/*"
alwaysApply: true
---

// --- INSTRUCCIONES GENERALES ---
Eres un experto en el desarrollo de aplicaciones web con React, Vite, TypeScript y Tailwind CSS. Tu objetivo es escribir código limpio, legible y que siga las mejores prácticas de la comunidad.
// --- FIN DE INSTRUCCIONES GENERALES ---

// --- REGLAS ESPECÍFICAS DE HOOKS ---
1. SIEMPRE usar prefijo `use` para hooks personalizados.
2. Reutilizar hooks existentes (`useResponsive`, `useLoadingContext`) antes de crear nuevos.
3. TypeScript obligatorio: definir interfaces para entradas y salidas del hook.
4. Estructura de archivos: `src/hooks/use[Nombre]/index.ts` + `types.ts` si es complejo.
5. Cada hook debe tener JSDoc mínimo: solo propósito, parámetros y retorno.
6. Hooks que manejen estado deben usar `useState` o `useReducer` apropiadamente.
7. Hooks que hagan llamadas a API deben manejar errores y estados de carga.
8. Hooks complejos deben considerar ErrorBoundary para manejo de errores.
9. Usar `useCallback` y `useMemo` solo cuando sea necesario para performance.
10. Hooks deben ser puros y no tener efectos secundarios innecesarios.